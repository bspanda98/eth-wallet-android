version: 2
references:
  # ----------------------------
  # Cache Configuration
  # ----------------------------
  cache_key: &cache_key
    key: cache-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
  restore_cache: &restore_cache
    restore_cache:
      <<: *cache_key
  save_cache: &save_cache
    save_cache:
      <<: *cache_key
      paths:
        - ~/.gradle
        - ~/.m2
# ----------------------------
# Docker Configuration
# ----------------------------
android_config: &android_config
  working_directory: ~/crimson
  docker:
    - image: circleci/android:api-28-alpha
  environment:
    TERM: dumb
    ANDROID_SDK_VERSION: 28
    ANDROID_BUILD_TOOLS_VERSION: 27.0.2
    GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2560M -XX:+HeapDumpOnOutOfMemoryError"'
# ----------------------------
# Job Section
# ----------------------------
jobs:
  # Job Debug
  build_debug:
    ...
  # Job Release
  build_release:
    <<: *android_config
      steps:
        - checkout
        - *restore_cache
        - run:
            name: Download dependencies
            command: ./gradlew androidDependencies
        - *save_cache
        - run:
            name: Install AWS CLI
            command:
              sudo apt-get -y -qq install awscli
        - run:
            name: AWS S3
            command: |
              mkdir temp
              aws configure set s3.signature_version s3v4
              aws s3 cp s3://remote_encrypted_s3/keyfile.jks tmp --region us-west-2
              aws s3 cp s3://remote_encrypted_s3/config.sh tmp --region us-west-2
        - run:
            name: Build Release
            command: |
              . tmp/config.sh
              ./gradlew clean assembleRelease \
              -Pandroid.injected.signing.store.file=tmp/keyfile.jks \
              -Pandroid.injected.signing.store.password="${STORE_PWD}" \
              -Pandroid.injected.signing.key.alias="${ALIAS_NAME}" \
              -Pandroid.injected.signing.key.password="${UPLOAD_PWD}"
              - store_artifacts:
                  path: app/build/outputs/apk/
              - store_artifacts:
                  path: app/build/outputs/mapping/
        - run:
            name: Deploy to Google Play with CustomApp
            command: java -jar tmp/CustomApp.jar tmp/config_oauth.json
  # Unit Tests
  unit_test:
    ...
# ----------------------------
# Workflows
# ----------------------------
workflows:
  version: 2
  debug_build_deploy:
    jobs:
      - build_debug:
  release_build_deploy:
    jobs:
      - build_release: